version: 2.1

orbs:
  python: circleci/python@0.3.2

commands:
  install-pip-package:
    parameters:
      package:
        type: string
      python-version:
        type: string
    steps:
      - restore_cache:
          name: Restore pip Cache
          keys:
            - pip-v2-<<parameters.python-version>>-<<parameters.package>>-
      - run:
          name: Install pip Package
          command: pip install --user --upgrade <<parameters.package>>
      - save_cache:
          name: Save pip Cache
          key: pip-v2-<<parameters.python-version>>-<<parameters.package>>-{{ epoch }}
          paths:
            - /home/circleci/.local/bin/
            - /home/circleci/.local/lib/
            - /home/circleci/.cache/pip/
  install-galaxy-roles:
    steps:
      - restore_cache:
            name: Restore Galaxy Role Cache
            keys:
              - galaxy-role-v2-{{ checksum "galaxy.yml" }}
      - run:
          name: Install Galaxy Roles
          command: ansible-galaxy install -r galaxy.yml
      - save_cache:
          name: Save Galaxy Role Cache
          key: galaxy-role-v2-{{ checksum "galaxy.yml" }}
          paths:
            - vendor/
  check-playbook-syntax:
    steps:
      - run:
          name: Check Playbook Syntax
          command: |
            ansible-playbook --syntax-check -e env=development deploy.yml
            ansible-playbook --syntax-check -e env=development dev.yml
            ansible-playbook --syntax-check -e env=development rollback.yml
            ansible-playbook --syntax-check -e xdebug_tunnel_inventory_host=1 xdebug-tunnel.yml

jobs:
  syntax-check:
    parameters:
      ansible-version:
        type: string
      python-version:
        type: string
    executor:
      name: python/default
      tag: <<parameters.python-version>>
    steps:
      - run: python --version
      - checkout
      - run: cd trellis
      - install-pip-package:
          package: ansible<< parameters.ansible-version >>
          python-version: <<parameters.python-version>>
      - run: ansible --version
      - install-galaxy-roles
      - check-playbook-syntax

  syntax-check-with-requirements-txt:
    parameters:
      python-version:
        type: string
    executor:
      name: python/default
      tag: <<parameters.python-version>>
    steps:
      - run: python --version
      - checkout
      - run: cd trellis
      - restore_cache:
            name: Restore pip Cache
            keys:
              - pip-v2-<<parameters.python-version>>-{{ checksum "requirements.txt" }}-
      - run:
          name: Install packages from requirements.txt (or any other file) via Pip.
          command: pip install --user --upgrade --requirement requirements.txt
      - save_cache:
          name: Save pip Cache
          key: pip-v2-<<parameters.python-version>>-{{ checksum "requirements.txt" }}-{{ epoch }}
          paths:
            - /home/circleci/.local/bin/
            - /home/circleci/.local/lib/
            - /home/circleci/.cache/pip
      - run: ansible --version
      - install-galaxy-roles
      - check-playbook-syntax

  lint:
    parameters:
      python-version:
        type: string
    executor:
      name: python/default
      tag: <<parameters.python-version>>
    steps:
      - run: python --version
      - checkout
      - install-pip-package:
          package: ansible-lint
          python-version: <<parameters.python-version>>
      - run: ansible-lint --version
      - run: cd trellis && ansible-lint deploy.yml dev.yml server.yml rollback.yml xdebug-tunnel.yml

workflows:
  lint:
    jobs:
      - lint:
          name: lint-python-3.7
          python-version: "3.7.8"
